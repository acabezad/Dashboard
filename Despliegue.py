{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "snies_Consolidado_2015_a_2018_p1             int64\n",
      "IES PADRE                                    int64\n",
      "Institución de Educación Superior (IES)     object\n",
      "Principal\\n o\\nSeccional                    object\n",
      "Id_Sector                                    int64\n",
      "Sector IES                                  object\n",
      "Id_Caracter                                  int64\n",
      "Caracter IES                                object\n",
      "Código del \\ndepartamento\\n(IES)             int64\n",
      "Departamento de \\ndomicilio de la IES       object\n",
      "Código del \\nMunicipio\\n(IES)                int64\n",
      "Municipio de\\ndomicilio de la IES           object\n",
      "Código \\nSNIES del\\nprograma                 int64\n",
      "Programa Académico                          object\n",
      "Id_Nivel                                     int64\n",
      "Nivel Académico                             object\n",
      "Id_Nivel_Formacion                           int64\n",
      "Nivel de Formación                          object\n",
      "Id_Metodologia                               int64\n",
      "Metodología                                 object\n",
      "Id_Area                                      int64\n",
      "Área de Conocimiento                        object\n",
      "Id_Nucleo                                    int64\n",
      "Núcleo Básico del Conocimiento (NBC)        object\n",
      "Código del \\nDepartamento\\n(Programa)        int64\n",
      "Departamento de oferta del programa         object\n",
      "Código del \\nMunicipio\\n(Programa)           int64\n",
      "Municipio de oferta del programa            object\n",
      "Id Género                                    int64\n",
      "Género                                      object\n",
      "Año                                          int64\n",
      "Semestre                                     int64\n",
      "Matriculados                               float64\n",
      "dtype: object\n",
      "['mujer' 'hombre']\n",
      "['mujer' 'hombre']\n",
      "['técnico' 'tecnologica' 'universitaria']\n",
      "['institucion tecnica profesional' 'institucion tecnologica']\n",
      "['distancia tradicional' 'presencial' 'distancia vitual']\n",
      "['derecho' 'economia administracion contaduria y afines' 'educacion']\n",
      "['técnico', 'tecnologica', 'universitaria']\n",
      "snies_Consolidado_2015_a_2018_p1      int64\n",
      "IES_PADRE                             int64\n",
      "INSTITUCION                          object\n",
      "PRINCIPAL_SECCIONAL                  object\n",
      "Id_Sector                             int64\n",
      "SECOTR_IES                           object\n",
      "Id_Caracter                           int64\n",
      "CARACTER_IES                         object\n",
      "DPTO                                  int64\n",
      "DPTO_IES                             object\n",
      "COD_MUNICIPIO_IES                     int64\n",
      "MUNICIPIO_IES                        object\n",
      "CODIGO_PROGRAMA                       int64\n",
      "PROGRAMA_ACADEMICO                   object\n",
      "Id_Nivel                              int64\n",
      "NIVEL_ACADEMICO                      object\n",
      "Id_Nivel_Formacion                    int64\n",
      "NIVEL_FORMACION                      object\n",
      "Id_Metodologia                        int64\n",
      "METODOLOGIA                          object\n",
      "Id_Area                               int64\n",
      "AREA_CONOCIMIENTO                    object\n",
      "Id_Nucleo                             int64\n",
      "NUCLEO_CONOCIMIENTO                  object\n",
      "COD_DPTO_PROGRAMA                     int64\n",
      "DPTO_PROGRAMA                        object\n",
      "COD_MUNICIPIO_PROGRAMA                int64\n",
      "MUNICIPIO_PROGRAMA                   object\n",
      "ID_GENERO                             int64\n",
      "GENERO                               object\n",
      "Año                                   int64\n",
      "Semestre                              int64\n",
      "MATRICULADOS                        float64\n",
      "dtype: object\n",
      "Dash is running on http://127.0.0.1:8051/\n",
      "\n",
      " * Serving Flask app \"__main__\" (lazy loading)\n",
      " * Environment: production\n",
      "   WARNING: This is a development server. Do not use it in a production deployment.\n",
      "   Use a production WSGI server instead.\n",
      " * Debug mode: off\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " * Running on http://127.0.0.1:8051/ (Press CTRL+C to quit)\n",
      "127.0.0.1 - - [01/Dec/2020 21:56:15] \"GET / HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [01/Dec/2020 21:56:16] \"GET /_dash-component-suites/dash_renderer/polyfill@7.v1_8_1m1600535251.8.7.min.js HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [01/Dec/2020 21:56:16] \"GET /_dash-component-suites/dash_renderer/react@16.v1_8_1m1600535251.13.0.min.js HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [01/Dec/2020 21:56:16] \"GET /_dash-component-suites/dash_renderer/react-dom@16.v1_8_1m1600535251.13.0.min.js HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [01/Dec/2020 21:56:16] \"GET /_dash-component-suites/dash_renderer/prop-types@15.v1_8_1m1600535251.7.2.min.js HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [01/Dec/2020 21:56:16] \"GET /_dash-component-suites/dash_html_components/dash_html_components.v1_1_1m1600535271.min.js HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [01/Dec/2020 21:56:16] \"GET /_dash-component-suites/dash_core_components/dash_core_components-shared.v1_12_1m1600535264.js HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [01/Dec/2020 21:56:16] \"GET /_dash-component-suites/dash_renderer/dash_renderer.v1_8_1m1600535251.min.js HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [01/Dec/2020 21:56:16] \"GET /_dash-component-suites/dash_core_components/dash_core_components.v1_12_1m1600535264.min.js HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [01/Dec/2020 21:56:17] \"GET /_favicon.ico?v=1.16.1 HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [01/Dec/2020 21:56:17] \"GET /_dash-dependencies HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [01/Dec/2020 21:56:17] \"GET /_dash-layout HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [01/Dec/2020 21:56:17] \"GET /_dash-component-suites/dash_core_components/async-graph.v1_12_1m1600286997.js HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [01/Dec/2020 21:56:17] \"GET /_dash-component-suites/dash_core_components/async-plotlyjs.v1_12_1m1600286997.js HTTP/1.1\" 200 -\n"
     ]
    }
   ],
   "source": [
    "from urllib.request import urlopen\n",
    "from zipfile import ZipFile\n",
    "from io import BytesIO\n",
    "#import shapefile\n",
    "import geopandas as geopandas\n",
    "#from shapely.geometry import shape  \n",
    "import pandas as pd\n",
    "import requests\n",
    "import matplotlib.pyplot as plt\n",
    "from matplotlib.collections import PatchCollection\n",
    "from matplotlib.patches import Circle\n",
    "from IPython.display import HTML, display_html, display\n",
    "import seaborn as sns\n",
    "import numpy as np\n",
    "from matplotlib import cm\n",
    "from matplotlib import colors\n",
    "import ipywidgets as widgets\n",
    "from ipywidgets import interact, interactive\n",
    "import dash_html_components as html\n",
    "import dash_core_components as dcc\n",
    "from dash.dependencies import Input, Output\n",
    "import dash\n",
    "import plotly.graph_objs as go\n",
    "import plotly.express as px\n",
    "\n",
    "\n",
    "#Carga base de datos\n",
    "\n",
    "url=\"https://raw.githubusercontent.com/acabezad/Dashboard/main/snies_Consolidado_2015_a_2018_TMP.csv\"\n",
    "df = pd.read_csv(url,  sep=';',  encoding='latin-1')\n",
    "\n",
    "#Valida cargue\n",
    "print (df.dtypes)\n",
    "\n",
    "\n",
    "#Reenombrar titulos de la base de datos\n",
    "df2= df.rename(columns={'Código de \\nla Institución  ':'COD_INSTITUCION',\n",
    "                       'IES PADRE':'IES_PADRE',\n",
    "                       'Institución de Educación Superior (IES)':'INSTITUCION',\n",
    "                       'Principal\\n o\\nSeccional':'PRINCIPAL_SECCIONAL',\n",
    "                       'Sector IES':'SECOTR_IES',\n",
    "                       'Caracter IES':'CARACTER_IES',\n",
    "                       'Código del \\ndepartamento\\n(IES)':'DPTO',\n",
    "                       'Departamento de \\ndomicilio de la IES':'DPTO_IES',\n",
    "                       'Código del \\nMunicipio\\n(IES)':'COD_MUNICIPIO_IES',\n",
    "                       'Municipio de\\ndomicilio de la IES':'MUNICIPIO_IES',\n",
    "                       'Código \\nSNIES del\\nprograma':'CODIGO_PROGRAMA',\n",
    "                       'Programa Académico':'PROGRAMA_ACADEMICO',\n",
    "                       'Nivel Académico':'NIVEL_ACADEMICO',\n",
    "                       'Nivel de Formación' :'NIVEL_FORMACION',\n",
    "                       'Metodología':'METODOLOGIA',\n",
    "                       'Área de Conocimiento':'AREA_CONOCIMIENTO',\n",
    "                       'Núcleo Básico del Conocimiento (NBC)':'NUCLEO_CONOCIMIENTO',\n",
    "                       'Código del \\nDepartamento\\n(Programa)':'COD_DPTO_PROGRAMA',\n",
    "                       'Departamento de oferta del programa':'DPTO_PROGRAMA',\n",
    "                       'Código del \\nMunicipio\\n(Programa)':'COD_MUNICIPIO_PROGRAMA',\n",
    "                       'Municipio de oferta del programa':'MUNICIPIO_PROGRAMA',\n",
    "                       'Id Género':'ID_GENERO',\n",
    "                       'Género':'GENERO' ,\n",
    "                       'Matriculados':'MATRICULADOS'\n",
    "                      })\n",
    "\n",
    "\n",
    "# Todos los campos los vuelve minuscula\n",
    "df2=df2.apply(lambda x: x.str.lower() if(x.dtype == \"object\") else x)\n",
    "\n",
    "\n",
    "print (df2.GENERO.unique())\n",
    "\n",
    "#Ajusta Area de conocimiento\n",
    "df2[\"GENERO\"]=[i.replace(\"femenino\",\"mujer\") for i in df2[\"GENERO\"]]\n",
    "\n",
    "df2[\"GENERO\"]=[i.replace(\"masculino\",\"hombre\") for i in df2[\"GENERO\"]]\n",
    "print (df2.GENERO.unique())\n",
    "\n",
    "\n",
    "df2[\"NIVEL_FORMACION\"]=[i.replace(\"formacion tecnica profesional\",\"tecnica\") for i in df2[\"NIVEL_FORMACION\"]]\n",
    "df2[\"NIVEL_FORMACION\"]=[i.replace(\"especialización médico quirúrgica\",\"especializacion\") for i in df2[\"NIVEL_FORMACION\"]]\n",
    "df2[\"NIVEL_FORMACION\"]=[i.replace(\"especialización universitaria\",\"especializacion\") for i in df2[\"NIVEL_FORMACION\"]]\n",
    "df2[\"NIVEL_FORMACION\"]=[i.replace(\"maestría\",\"maestria\") for i in df2[\"NIVEL_FORMACION\"]]\n",
    "df2[\"NIVEL_FORMACION\"]=[i.replace(\"tecnológica\",\"tecnologica\") for i in df2[\"NIVEL_FORMACION\"]]\n",
    "df2[\"NIVEL_FORMACION\"]=[i.replace(\"formación técnica profesional\",\"tecnica\") for i in df2[\"NIVEL_FORMACION\"]]\n",
    "df2[\"NIVEL_FORMACION\"]=[i.replace(\"especialización tecnologica\",\"especializacion\") for i in df2[\"NIVEL_FORMACION\"]]\n",
    "df2[\"NIVEL_FORMACION\"]=[i.replace(\"especialización técnico profesional\",\"especializacion\") for i in df2[\"NIVEL_FORMACION\"]]\n",
    "df2[\"NIVEL_FORMACION\"]=[i.replace(\"especialización tecnológica\",\"especializacion\") for i in df2[\"NIVEL_FORMACION\"]]\n",
    "print (df2.NIVEL_FORMACION.unique())\n",
    "\n",
    "\n",
    "df2[\"CARACTER_IES\"]=[i.replace(\"institución técnica profesional\",\"institucion tecnica profesional\") for i in df2[\"CARACTER_IES\"]]\n",
    "df2[\"CARACTER_IES\"]=[i.replace(\"institución tecnológica\",\"institucion tecnologica\") for i in df2[\"CARACTER_IES\"]]\n",
    "df2[\"CARACTER_IES\"]=[i.replace(\"institución universitaria/escuela tecnológica\",\"institucion universitaria/escuela tecnologica\") for i in df2[\"CARACTER_IES\"]]\n",
    "print (df2.CARACTER_IES.unique())\n",
    "\n",
    "\n",
    "df2.METODOLOGIA=df2.METODOLOGIA.replace({\"virtual\":\"distancia (virtual)\"})\n",
    "print (df2.METODOLOGIA.unique())\n",
    "\n",
    "df2[\"AREA_CONOCIMIENTO\"]=[i.replace(\"ingeniería, arquitectura, urbanismo y afines\",\"ingenieria arquitectura urbanismo y afines\") for i in df2[\"AREA_CONOCIMIENTO\"]]\n",
    "df2[\"AREA_CONOCIMIENTO\"]=[i.replace(\"matemáticas y ciencias naturales\",\"matematicas y ciencias naturales\") for i in df2[\"AREA_CONOCIMIENTO\"]]\n",
    "df2[\"AREA_CONOCIMIENTO\"]=[i.replace(\"agronomía, veterinaria y afines\",\"agronomia veterinaria y afines\") for i in df2[\"AREA_CONOCIMIENTO\"]]\n",
    "df2[\"AREA_CONOCIMIENTO\"]=[i.replace(\"ciencias de la educación\",\"ciencias de la educacion\") for i in df2[\"AREA_CONOCIMIENTO\"]]\n",
    "df2[\"AREA_CONOCIMIENTO\"]=[i.replace(\"economía, administración, contaduría y afines\",\"economia administracion contaduria y afines\") for i in df2[\"AREA_CONOCIMIENTO\"]]\n",
    "print (df2.AREA_CONOCIMIENTO.unique())\n",
    "\n",
    "nombres=list(df2.NIVEL_FORMACION.unique())\n",
    "print(nombres)\n",
    "tb=pd.DataFrame(df2.groupby('NIVEL_FORMACION')['MATRICULADOS'].sum())\n",
    "manzanas=list(tb.MATRICULADOS)\n",
    "\n",
    "\n",
    "print (df2.dtypes)\n",
    "\n",
    "\n",
    "app = dash.Dash()\n",
    "\n",
    "\n",
    "fig = px.pie(df2, values='MATRICULADOS', names='NIVEL_FORMACION', title='FIGURA 1')\n",
    "\n",
    "fig2 = px.bar(df2, x=\"AREA_CONOCIMIENTO\", y=\"MATRICULADOS\", color=\"SECOTR_IES\")\n",
    "\n",
    "fig3 = px.line(df2, x=\"Año\", y=\"MATRICULADOS\", color=\"METODOLOGIA\")\n",
    "\n",
    "fig4 = px.line(df2, x=\"Año\", y=\"MATRICULADOS\", color=\"METODOLOGIA\")\n",
    "\n",
    "\n",
    "#diseño del app\n",
    "app.layout = html.Div([\n",
    "    \n",
    "    \n",
    "    html.Div([\n",
    "    dcc.Graph(figure=fig)],\n",
    "        style={\"display\": \"inline-block\", 'width': '49%', \"border-style\": \"dashed\", \"border-width\": \"1px\", \"color\": \"blue\" }),\n",
    "\n",
    "    html.Div([\n",
    "    dcc.Graph(figure=fig2)],\n",
    "        style={'display': 'inline-block', 'width': '49%', \"border-style\": \"dashed\", \"border-width\": \"1px\", \"color\": \"blue\"}),\n",
    "    \n",
    "    html.Div([\n",
    "    dcc.Graph(figure=fig3)],\n",
    "        style={\"display\": \"inline-block\", 'width': '49%', \"border-style\": \"dashed\", \"border-width\": \"1px\", \"color\": \"blue\" }),\n",
    "\n",
    "    html.Div([\n",
    "    dcc.Graph(figure=fig4)],\n",
    "        style={'display': 'inline-block', 'width': '49%', \"border-style\": \"dashed\", \"border-width\": \"1px\", \"color\": \"blue\"}),      \n",
    "        \n",
    "        ])\n",
    "\n",
    "app.run_server(port=\"8051\")\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  },
  "latex_envs": {
   "LaTeX_envs_menu_present": true,
   "autoclose": false,
   "autocomplete": true,
   "bibliofile": "biblio.bib",
   "cite_by": "apalike",
   "current_citInitial": 1,
   "eqLabelWithNumbers": true,
   "eqNumInitial": 1,
   "hotkeys": {
    "equation": "Ctrl-E",
    "itemize": "Ctrl-I"
   },
   "labels_anchors": false,
   "latex_user_defs": false,
   "report_style_numbering": false,
   "user_envs_cfg": false
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
